# Copyright 2020 Google, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Show current gcloud auth

on: [push, pull_request]

jobs:
  show-auth:
    name: Run Giskard Tests
    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: 'Use gcloud CLI'
      run: 'gcloud info' 

    - name: Download the 300W indoor dataset
      id: download_dataset
      run: |
        sh download_300W.sh

    - name: Run the Giskard report 🐢
      id: giskard_scan
      run: |
        mprof run python3.10 report.py

    - name: Memory profiling summary
      uses: test-summary/action@v2
      with:
        paths: "mprofile_*.dat"
      if: always()

    - name: Update readme ⬆️
      id: giskard_scan
      run: |
        mprof run python3.10 report.py
        output=$(find . -iname "report_*.md" -exec basename {} ';' -maxdepth 1)
        mkdir -p reports
        cp $output reports/.
        cp reports/$output reports/latest.md
        rm README.md
        cat README_template.md reports/latest.md >> README.md

    - name: Extract branch name 🌲
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Upload the report 🤖
      id: extract_sha
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add reports README.md
        git commit -m "🤖 github-bot: Updated Reports"
        git push
        echo "::set-output name=sha::$(git rev-parse HEAD)"